<project name="SFAS" default="war" basedir=".">

  <property name="app.name"      value="SFAS"/>
  <property name="app.path"      value="/${app.name}"/>
  <property name="build.home"    value="${basedir}/build"/>
  <property name="dist.home"     value="${basedir}/dist"/>
  <property name="docs.home"     value="${basedir}/docs"/>
  <property name="src.home"      value="${basedir}/src"/>
  <property name="lib.dir"       value="${basedir}/lib"/>
  <property name="web.home"      value="${basedir}/web"/>
  <property name="classes.home" value="${build.home}/WEB-INF/classes"/>

  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>

  <target name="options">
    <echo message=""/>
    <echo message="Available targets are:"/>
    <echo message=""/>
    <echo message="prepare   --> prepare application"/>
    <echo message="compile   --> Build the application"/>
    <echo message="clean     --> clean application"/>
    <echo message="war       --> Build war for the application"/>
    <echo message=""/>
  </target>

  <path id="compile.classpath">
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
    </fileset>	
  </path>

  <target name="prepare">    
    
    <!-- Create build directories as needed -->
    <mkdir  dir="${build.home}"/>
    <mkdir  dir="${build.home}/WEB-INF"/>
    <mkdir  dir="${build.home}/WEB-INF/classes"/>
    <mkdir  dir="${build.home}/WEB-INF/lib"/>

    <!-- Copy static content of this web application -->
    <copy todir="${build.home}">
      <fileset dir="${web.home}"/>
    </copy>
    
  	<copy todir="/home/anik/tomcat6/webapps/${app.name}">
  		<fileset dir="${web.home}"/>
  	</copy>
  	
    <!-- Copy external dependencies as required -->
    <copy todir="${build.home}/WEB-INF/lib">
      <fileset dir="${basedir}/lib" />
    </copy>
    
    <!-- Copy static files from external dependencies as needed -->
    <copy  todir="${classes.home}">
      <fileset dir="${src.home}" excludes="**/*.java"/>
    </copy>
  </target>



 <target name="compile" depends="prepare"
   description="Compile Java sources">

    <!-- Compile Java classes as necessary -->
    <mkdir    dir="${build.home}/WEB-INF/classes"/>
    <javac srcdir="${src.home}"
          destdir="${build.home}/WEB-INF/classes"
            debug="${compile.debug}"
      deprecation="${compile.deprecation}"
         optimize="${compile.optimize}"
	 includeantruntime="false">
        <classpath refid="compile.classpath"/>
    </javac>

    <!-- Copy application resources -->
    <copy  todir="${build.home}/WEB-INF/classes">
      <fileset dir="${src.home}" excludes="**/*.java"/>
    </copy>

  </target>

  <target name="clean"
	  description="Delete old build and dist directories">
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
  </target>
  

  <target name="javadoc" depends="compile"
   description="Create Javadoc API documentation">

    <mkdir          dir="${dist.home}/docs/api"/>
    <javadoc sourcepath="${src.home}"
                destdir="${dist.home}/docs/api"
           packagenames="*">
      <classpath refid="compile.classpath"/>
    </javadoc>
  </target>

  <target name="war" depends="clean,compile">
    <mkdir dir="build"/>
    <mkdir   dir="${dist.home}"/>
    <war warfile="${dist.home}/${app.name}.war" webxml="${build.home}/WEB-INF/web.xml">
      <fileset dir="${build.home}"/>
    </war>
  </target>

  <target name="default" depends="war">
    <antcall target="clean"/>
  </target>

  <target name="dist" depends="compile,javadoc"
   description="Create binary distribution">

    <!-- Copy documentation subdirectories -->
    <mkdir   dir="${dist.home}/docs"/>
    <copy    todir="${dist.home}/docs">
      <fileset dir="${docs.home}"/>
    </copy>

    <!-- Create application JAR file -->
    <jar jarfile="${dist.home}/${app.name}.war"
         basedir="${build.home}"/>

    <!-- Copy additional files to ${dist.home} as necessary -->

  </target>


  <target name="dev-war" depends="clean,compile">
    <mkdir dir="build"/>
    <war warfile="${dist.home}/${app.name}.war" webxml="${build.home}/WEB-INF/web.xml">
      <fileset dir="${build.home}"/>
    </war>
    <copy todir="/home/anik/tomcat6/webapps"><fileset file="${dist.home}/${app.name}.war"/></copy>
  </target>


</project>